# Configurciones de ejemplo
# Hay opciones obligatorias. Si no se definen activeco no arrancara.

[global]
# logFile: opcional
# archivo donde se guarda el log. Asegurarse que exista y se tenga
# permiso de escrutura. Si se omite se asume /var/log/activeco.log
  logFile = /var/log/activeco.log

# logLevel: opcional
# nivel de log. trace, debug, info, error, warn. El nivel de log
# mas alto automaticamente incluye los mensajes de los niveles mas bajos.
# El orden de los niveles es el sigiente de menor a mayor.
# ERROR -> WARN -> INFO -> DEBUG -> TRACE
# Si se omite se asume INFO
  logLevel = info

# Opciones relativas a la camara que sera leida en busca de patentes
[camera]
# url: obligatorio
# Url del recurso rtsp. Es un valor obligatorio
  url = rtsp://admin:xxxx@192.168.1.34

# pointName: obligatorio
# Define el nombre del puesto donde se encuentra la camara. Este nombre
# aparecera en el log. Y las fotos tomadas de la camara contendran 
# el nombre del archivo.
  pointName = bruto

# observers: obligatorio
# Define los observadores para la camara, por lo menos tiene que existir
# un observador. Es una opcion multivaluada.
# Existen estos observadores: chronoObserver, moveObserver
  observers = chronoObserver
  observers = moveObserver

# dumpers: obligatorio
# Define los "volcadores" de la informacion detectada, tiene que existir
# al menos un volcador. 
# Existen estos volcadores: dumper2Db, dumper2File
  dumpers = dumper2Db
  dumpers = dumper2File

# Observador cronometrado del flujo de video.
# Reconoce un frame de viedo cada cierto tiempo. Cuando se cumple el timeout.
[chronoObserver]
# timeout: obligatorio
# tiempo en segundos de la reaccion del observador del flujo de viedo
  timeout = 10

# Observador de movimiento en el flujo de video.
# Al detectar el movimiento y mientras lo observe entregara los frames del flujo.
# Los frames son analizado por el motor de reconocimiento vpar.
[moveObserver]
# Los siguientes parametros son todos obligatorios, y definen la region
# que sera observada para detectar el movimiento. Basicamente se saca un 
# promedio de esta y se compara con el promedio anterior. Si la relacion
# entre ambos supera el 25% tanto para abajo como para arriba se asume
# que hay movimiento. 0.75 < prom.actual / prom. anterior < 1.25.
# El promedio es calculado sobre el canal rojo solamente.
# pointX y pointY es la coordenada del punto izquierdo superior de la region.
# width y height es el ancho y alto.
  pointX = 870
  pointY = 260
  width = 30
  height = 30

# volcador a la base de datos.
# Vuelca la informacion detectada a un servidor postgres.
# De momento el usuario y clave estan "harcodeadas" en el 
# codigo. El usuario de conexion es activeco.
[dumper2Db]
  dbName = laridae
  dbIp = 192.168.1.6
  dbPort = 5433

# volcador al sistema de archivos
# Guarda los frames como archivos de imagen. Utiliza el pointName 
# para armar el nombre del archivo.
[dumper2File]
# fsPath: obligatorio
# Define la carpeta donde almacenara las fotos de los frames.
  fsPath = /var/lib/activeco/patentes

